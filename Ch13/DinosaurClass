/*****************************************************************************
 *	Name:      Mr. Creelman                                                  *
 *	Course:    ICS4U                                                         *  
 *	Date:      October 21st, 2016	                                         * 
 *	                                                                         * 
 *	Purpose:   Demonstrate a simple class in one file                        *
 *	                                                                         *
 *	Usage:                                                                   *
 *	                                                                         *
 *	Revision History:  More Comments added October 28, 2016                  *  
 *	                                                                         *
 *	Known Issues:                                                            *
 *	                                                                         *  
 *****************************************************************************/
#include <iostream>
#include <cstdlib>
#include <apstring.h>
#include <apstring.cpp>

using namespace std;

/******************************************************
 * class definition would normally be in Dinosaur.h   * 
/******************************************************/
class Dinosaur {
	// private data, accessible only to class function 
	private:
		apstring name;
		int teeth;
		float height;
			
	public:
		// constructors
		Dinosaur() { name = "Yet to be named"; 
					 teeth = 0; 
					 height = 0;}
		Dinosaur(apstring n) { name = n; teeth = 0; height = 0;}
		Dinosaur(apstring n,  int t, float h) {
				name = n;teeth = t; height =h;}
				
		// methods for roaring
		void roar(); 	// prototype
		
		// assessores and mutators (inline function)
		int getTeeth() { return teeth;}
		void setTeeth(int t) { teeth = t;}
		int getHeight() { return height;}
		void setHeight(int h) { height = h;}
		// accessor and mutator not inline
		apstring getName();
		void setName(apstring n);
		
		// destructor
		~Dinosaur(); 
};

/******************************************************
 * These function would normally be in Dinosaur.cpp   * 
/******************************************************/

void Dinosaur::setName(apstring n) {
	name = n;
}

apstring Dinosaur::getName() {
	return name;
}

void Dinosaur::roar() { 
	cout << "Me " << name << " Roar Roar" << endl ;
	// note that you could use getName() instead of name, but also
	// note normally use the private data directly. 
};

// Destructor 
Dinosaur::~Dinosaur() {
	// Normally you only need to free memory you explicitly allocated
	// print statement is just to show it is called automatically. 
	cout << endl << "Destroy Dinosaur " << name << endl;
	// No "new" statements in class, so no need to "delete"
}

/**************************************************
 * main.cpp                                       * 
/**************************************************/

int main() {
	// instantiate some Dinosaurs using the various constructors
	Dinosaur TRex;
	Dinosaur Aladar("Aladar");
	Dinosaur Barney("Barney", 32, 56.15);
	
	// set private data with set function
	TRex.setTeeth(45);
	// access private data with get function
	cout << "TRex has " << TRex.getTeeth() << " Teeth " << endl;
	Barney.roar();
	TRex.setName("Rexy");
	cout  << "My name is " << Aladar.getName() << endl;
	TRex.roar();
}

